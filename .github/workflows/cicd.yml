

on:
  push:
    branches: [ main ]

jobs:

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Maven
      run: mvn clean package;ls
      #run: mvn --batch-mode --update-snapshots package

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: java-ecr
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
    - name: Update kube config
      run: aws eks --region us-east-1 update-kubeconfig --name test

    - name: Deploy image to Amazon EKS
      run: |
        
        kubectl apply -f eks/deployment.yml
        kubectl apply -f eks/deployment.yml
        
      
    # - name: deploy to cluster
    #   uses: kodermax/kubectl-aws-eks@master
    #   env:
    #     KUBECTL_VERSION: "v1.22.0"
    #     IAM_VERSION: "0.5.6"
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: java-ecr
    #     IMAGE_TAG: ${{ github.sha }}
    #   with:
    #     args: set image deployment/my-app spring=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -n default
        
    - name: verify deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBECTL_VERSION: "v1.22.0"
        IAM_VERSION: "0.5.6"
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout status deployment/my-app -n stagging
